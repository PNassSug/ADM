'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.34209
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

'
'Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.34209.
'
Namespace portal.arquivos

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="ArquivosSoap", [Namespace]:="http://www.grupocandinho.com.br/WebServices/Arquivos.asmx")> _
    Partial Public Class Arquivos
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private LogArquivoOperationCompleted As System.Threading.SendOrPostCallback

        Private RetornaArquivoTesteOperationCompleted As System.Threading.SendOrPostCallback

        Private RetornaArquivoOperationCompleted As System.Threading.SendOrPostCallback

        Private RetornaExtensaoOperationCompleted As System.Threading.SendOrPostCallback

        Private CadastraArquivoOperationCompleted As System.Threading.SendOrPostCallback

        Private testeOperationCompleted As System.Threading.SendOrPostCallback

        Private useDefaultCredentialsSetExplicitly As Boolean

        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Administrativo.WS.My.MySettings.Default.Administrativo_WS_portal_arquivos_Arquivos
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub

        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true) _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false)) _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property

        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property

        '''<remarks/>
        Public Event LogArquivoCompleted As LogArquivoCompletedEventHandler

        '''<remarks/>
        Public Event RetornaArquivoTesteCompleted As RetornaArquivoTesteCompletedEventHandler

        '''<remarks/>
        Public Event RetornaArquivoCompleted As RetornaArquivoCompletedEventHandler

        '''<remarks/>
        Public Event RetornaExtensaoCompleted As RetornaExtensaoCompletedEventHandler

        '''<remarks/>
        Public Event CadastraArquivoCompleted As CadastraArquivoCompletedEventHandler

        '''<remarks/>
        Public Event testeCompleted As testeCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Arquivos.asmx/LogArquivo", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Arquivos.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Arquivos.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function LogArquivo(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal obrigacao As String, ByVal competencia As String, ByVal parcela As String, ByVal sequenciaExtra As String, ByVal obrigacaoExtra As String, ByVal tipoPessoaInforme As String, ByVal informe As String, ByVal emailUsuarioEmpresa As String) As String
            Dim results() As Object = Me.Invoke("LogArquivo", New Object() {escritorioCNPJ, empresa, obrigacao, competencia, parcela, sequenciaExtra, obrigacaoExtra, tipoPessoaInforme, informe, emailUsuarioEmpresa})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub LogArquivoAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal obrigacao As String, ByVal competencia As String, ByVal parcela As String, ByVal sequenciaExtra As String, ByVal obrigacaoExtra As String, ByVal tipoPessoaInforme As String, ByVal informe As String, ByVal emailUsuarioEmpresa As String)
            Me.LogArquivoAsync(escritorioCNPJ, empresa, obrigacao, competencia, parcela, sequenciaExtra, obrigacaoExtra, tipoPessoaInforme, informe, emailUsuarioEmpresa, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub LogArquivoAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal obrigacao As String, ByVal competencia As String, ByVal parcela As String, ByVal sequenciaExtra As String, ByVal obrigacaoExtra As String, ByVal tipoPessoaInforme As String, ByVal informe As String, ByVal emailUsuarioEmpresa As String, ByVal userState As Object)
            If (Me.LogArquivoOperationCompleted Is Nothing) Then
                Me.LogArquivoOperationCompleted = AddressOf Me.OnLogArquivoOperationCompleted
            End If
            Me.InvokeAsync("LogArquivo", New Object() {escritorioCNPJ, empresa, obrigacao, competencia, parcela, sequenciaExtra, obrigacaoExtra, tipoPessoaInforme, informe, emailUsuarioEmpresa}, Me.LogArquivoOperationCompleted, userState)
        End Sub

        Private Sub OnLogArquivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogArquivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogArquivoCompleted(Me, New LogArquivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Arquivos.asmx/RetornaArquivoTeste", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Arquivos.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Arquivos.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function RetornaArquivoTeste(ByVal nomeArquivo As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("RetornaArquivoTeste", New Object() {nomeArquivo})
            Return CType(results(0), Byte())
        End Function

        '''<remarks/>
        Public Overloads Sub RetornaArquivoTesteAsync(ByVal nomeArquivo As String)
            Me.RetornaArquivoTesteAsync(nomeArquivo, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub RetornaArquivoTesteAsync(ByVal nomeArquivo As String, ByVal userState As Object)
            If (Me.RetornaArquivoTesteOperationCompleted Is Nothing) Then
                Me.RetornaArquivoTesteOperationCompleted = AddressOf Me.OnRetornaArquivoTesteOperationCompleted
            End If
            Me.InvokeAsync("RetornaArquivoTeste", New Object() {nomeArquivo}, Me.RetornaArquivoTesteOperationCompleted, userState)
        End Sub

        Private Sub OnRetornaArquivoTesteOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetornaArquivoTesteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetornaArquivoTesteCompleted(Me, New RetornaArquivoTesteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Arquivos.asmx/RetornaArquivo", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Arquivos.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Arquivos.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function RetornaArquivo(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal obrigacao As String, ByVal competencia As String, ByVal parcela As String, ByVal sequenciaExtra As String, ByVal obrigacaoExtra As String, ByVal tipoPessoaInforme As String, ByVal informe As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("RetornaArquivo", New Object() {escritorioCNPJ, empresa, obrigacao, competencia, parcela, sequenciaExtra, obrigacaoExtra, tipoPessoaInforme, informe})
            Return CType(results(0), Byte())
        End Function

        '''<remarks/>
        Public Overloads Sub RetornaArquivoAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal obrigacao As String, ByVal competencia As String, ByVal parcela As String, ByVal sequenciaExtra As String, ByVal obrigacaoExtra As String, ByVal tipoPessoaInforme As String, ByVal informe As String)
            Me.RetornaArquivoAsync(escritorioCNPJ, empresa, obrigacao, competencia, parcela, sequenciaExtra, obrigacaoExtra, tipoPessoaInforme, informe, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub RetornaArquivoAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal obrigacao As String, ByVal competencia As String, ByVal parcela As String, ByVal sequenciaExtra As String, ByVal obrigacaoExtra As String, ByVal tipoPessoaInforme As String, ByVal informe As String, ByVal userState As Object)
            If (Me.RetornaArquivoOperationCompleted Is Nothing) Then
                Me.RetornaArquivoOperationCompleted = AddressOf Me.OnRetornaArquivoOperationCompleted
            End If
            Me.InvokeAsync("RetornaArquivo", New Object() {escritorioCNPJ, empresa, obrigacao, competencia, parcela, sequenciaExtra, obrigacaoExtra, tipoPessoaInforme, informe}, Me.RetornaArquivoOperationCompleted, userState)
        End Sub

        Private Sub OnRetornaArquivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetornaArquivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetornaArquivoCompleted(Me, New RetornaArquivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Arquivos.asmx/RetornaExtensao", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Arquivos.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Arquivos.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function RetornaExtensao(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal obrigacao As String, ByVal competencia As String, ByVal parcela As String, ByVal sequenciaExtra As String, ByVal obrigacaoExtra As String, ByVal tipoPessoaInforme As String, ByVal informe As String) As String
            Dim results() As Object = Me.Invoke("RetornaExtensao", New Object() {escritorioCNPJ, empresa, obrigacao, competencia, parcela, sequenciaExtra, obrigacaoExtra, tipoPessoaInforme, informe})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub RetornaExtensaoAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal obrigacao As String, ByVal competencia As String, ByVal parcela As String, ByVal sequenciaExtra As String, ByVal obrigacaoExtra As String, ByVal tipoPessoaInforme As String, ByVal informe As String)
            Me.RetornaExtensaoAsync(escritorioCNPJ, empresa, obrigacao, competencia, parcela, sequenciaExtra, obrigacaoExtra, tipoPessoaInforme, informe, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub RetornaExtensaoAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal obrigacao As String, ByVal competencia As String, ByVal parcela As String, ByVal sequenciaExtra As String, ByVal obrigacaoExtra As String, ByVal tipoPessoaInforme As String, ByVal informe As String, ByVal userState As Object)
            If (Me.RetornaExtensaoOperationCompleted Is Nothing) Then
                Me.RetornaExtensaoOperationCompleted = AddressOf Me.OnRetornaExtensaoOperationCompleted
            End If
            Me.InvokeAsync("RetornaExtensao", New Object() {escritorioCNPJ, empresa, obrigacao, competencia, parcela, sequenciaExtra, obrigacaoExtra, tipoPessoaInforme, informe}, Me.RetornaExtensaoOperationCompleted, userState)
        End Sub

        Private Sub OnRetornaExtensaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetornaExtensaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetornaExtensaoCompleted(Me, New RetornaExtensaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Arquivos.asmx/CadastraArquivo", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Arquivos.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Arquivos.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function CadastraArquivo(ByVal escritorioCNPJ As String, ByVal loginUsuarioEscritorio As String, ByVal empresa As String, ByVal obrigacao As String, ByVal competencia As String, ByVal parcela As String, ByVal sequenciaExtra As String, ByVal obrigacaoExtra As String, ByVal tipoPessoaInforme As String, ByVal informe As String, ByVal vencimento As Date, ByVal mensagem As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal arquivo() As Byte, ByVal extensao As String) As String
            Dim results() As Object = Me.Invoke("CadastraArquivo", New Object() {escritorioCNPJ, loginUsuarioEscritorio, empresa, obrigacao, competencia, parcela, sequenciaExtra, obrigacaoExtra, tipoPessoaInforme, informe, vencimento, mensagem, arquivo, extensao})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub CadastraArquivoAsync(ByVal escritorioCNPJ As String, ByVal loginUsuarioEscritorio As String, ByVal empresa As String, ByVal obrigacao As String, ByVal competencia As String, ByVal parcela As String, ByVal sequenciaExtra As String, ByVal obrigacaoExtra As String, ByVal tipoPessoaInforme As String, ByVal informe As String, ByVal vencimento As Date, ByVal mensagem As String, ByVal arquivo() As Byte, ByVal extensao As String)
            Me.CadastraArquivoAsync(escritorioCNPJ, loginUsuarioEscritorio, empresa, obrigacao, competencia, parcela, sequenciaExtra, obrigacaoExtra, tipoPessoaInforme, informe, vencimento, mensagem, arquivo, extensao, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub CadastraArquivoAsync(ByVal escritorioCNPJ As String, ByVal loginUsuarioEscritorio As String, ByVal empresa As String, ByVal obrigacao As String, ByVal competencia As String, ByVal parcela As String, ByVal sequenciaExtra As String, ByVal obrigacaoExtra As String, ByVal tipoPessoaInforme As String, ByVal informe As String, ByVal vencimento As Date, ByVal mensagem As String, ByVal arquivo() As Byte, ByVal extensao As String, ByVal userState As Object)
            If (Me.CadastraArquivoOperationCompleted Is Nothing) Then
                Me.CadastraArquivoOperationCompleted = AddressOf Me.OnCadastraArquivoOperationCompleted
            End If
            Me.InvokeAsync("CadastraArquivo", New Object() {escritorioCNPJ, loginUsuarioEscritorio, empresa, obrigacao, competencia, parcela, sequenciaExtra, obrigacaoExtra, tipoPessoaInforme, informe, vencimento, mensagem, arquivo, extensao}, Me.CadastraArquivoOperationCompleted, userState)
        End Sub

        Private Sub OnCadastraArquivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CadastraArquivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CadastraArquivoCompleted(Me, New CadastraArquivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Arquivos.asmx/teste", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Arquivos.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Arquivos.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function teste(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal arquivo() As Byte, ByVal extensao As String) As String
            Dim results() As Object = Me.Invoke("teste", New Object() {arquivo, extensao})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub testeAsync(ByVal arquivo() As Byte, ByVal extensao As String)
            Me.testeAsync(arquivo, extensao, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub testeAsync(ByVal arquivo() As Byte, ByVal extensao As String, ByVal userState As Object)
            If (Me.testeOperationCompleted Is Nothing) Then
                Me.testeOperationCompleted = AddressOf Me.OntesteOperationCompleted
            End If
            Me.InvokeAsync("teste", New Object() {arquivo, extensao}, Me.testeOperationCompleted, userState)
        End Sub

        Private Sub OntesteOperationCompleted(ByVal arg As Object)
            If (Not (Me.testeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent testeCompleted(Me, New testeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub

        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing) _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024) _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub LogArquivoCompletedEventHandler(ByVal sender As Object, ByVal e As LogArquivoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class LogArquivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub RetornaArquivoTesteCompletedEventHandler(ByVal sender As Object, ByVal e As RetornaArquivoTesteCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class RetornaArquivoTesteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), Byte())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub RetornaArquivoCompletedEventHandler(ByVal sender As Object, ByVal e As RetornaArquivoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class RetornaArquivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), Byte())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub RetornaExtensaoCompletedEventHandler(ByVal sender As Object, ByVal e As RetornaExtensaoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class RetornaExtensaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub CadastraArquivoCompletedEventHandler(ByVal sender As Object, ByVal e As CadastraArquivoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class CadastraArquivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub testeCompletedEventHandler(ByVal sender As Object, ByVal e As testeCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class testeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class
End Namespace
