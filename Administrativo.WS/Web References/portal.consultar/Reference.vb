'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.34209
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

'
'Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.34209.
'
Namespace portal.consultar

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="ConsultasSoap", [Namespace]:="http://www.grupocandinho.com.br/WebServices/Consultas.asmx")> _
    Partial Public Class Consultas
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private ConsultaEmpresasOperationCompleted As System.Threading.SendOrPostCallback

        Private ConsultaUsuarioEmpresaOperationCompleted As System.Threading.SendOrPostCallback

        Private ConsultaObrigacoesOperationCompleted As System.Threading.SendOrPostCallback

        Private ConsultaEmpresaUsuarioObrigacaoOperationCompleted As System.Threading.SendOrPostCallback

        Private ConsultaEscritoriosOperationCompleted As System.Threading.SendOrPostCallback

        Private ConsultaUsuarioEscritorioOperationCompleted As System.Threading.SendOrPostCallback

        Private useDefaultCredentialsSetExplicitly As Boolean

        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Administrativo.WS.My.MySettings.Default.Administrativo_WS_portal_consultar_Consultas
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub

        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true) _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false)) _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property

        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property

        '''<remarks/>
        Public Event ConsultaEmpresasCompleted As ConsultaEmpresasCompletedEventHandler

        '''<remarks/>
        Public Event ConsultaUsuarioEmpresaCompleted As ConsultaUsuarioEmpresaCompletedEventHandler

        '''<remarks/>
        Public Event ConsultaObrigacoesCompleted As ConsultaObrigacoesCompletedEventHandler

        '''<remarks/>
        Public Event ConsultaEmpresaUsuarioObrigacaoCompleted As ConsultaEmpresaUsuarioObrigacaoCompletedEventHandler

        '''<remarks/>
        Public Event ConsultaEscritoriosCompleted As ConsultaEscritoriosCompletedEventHandler

        '''<remarks/>
        Public Event ConsultaUsuarioEscritorioCompleted As ConsultaUsuarioEscritorioCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Consultas.asmx/ConsultaEmpresas", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Consultas.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Consultas.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ConsultaEmpresas(ByVal escritorioCNPJ As String, ByVal empresa As String) As String
            Dim results() As Object = Me.Invoke("ConsultaEmpresas", New Object() {escritorioCNPJ, empresa})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub ConsultaEmpresasAsync(ByVal escritorioCNPJ As String, ByVal empresa As String)
            Me.ConsultaEmpresasAsync(escritorioCNPJ, empresa, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ConsultaEmpresasAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal userState As Object)
            If (Me.ConsultaEmpresasOperationCompleted Is Nothing) Then
                Me.ConsultaEmpresasOperationCompleted = AddressOf Me.OnConsultaEmpresasOperationCompleted
            End If
            Me.InvokeAsync("ConsultaEmpresas", New Object() {escritorioCNPJ, empresa}, Me.ConsultaEmpresasOperationCompleted, userState)
        End Sub

        Private Sub OnConsultaEmpresasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaEmpresasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaEmpresasCompleted(Me, New ConsultaEmpresasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Consultas.asmx/ConsultaUsuarioEmpresa" & _
            "", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Consultas.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Consultas.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ConsultaUsuarioEmpresa(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal email As String) As String
            Dim results() As Object = Me.Invoke("ConsultaUsuarioEmpresa", New Object() {escritorioCNPJ, empresa, email})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub ConsultaUsuarioEmpresaAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal email As String)
            Me.ConsultaUsuarioEmpresaAsync(escritorioCNPJ, empresa, email, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ConsultaUsuarioEmpresaAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal email As String, ByVal userState As Object)
            If (Me.ConsultaUsuarioEmpresaOperationCompleted Is Nothing) Then
                Me.ConsultaUsuarioEmpresaOperationCompleted = AddressOf Me.OnConsultaUsuarioEmpresaOperationCompleted
            End If
            Me.InvokeAsync("ConsultaUsuarioEmpresa", New Object() {escritorioCNPJ, empresa, email}, Me.ConsultaUsuarioEmpresaOperationCompleted, userState)
        End Sub

        Private Sub OnConsultaUsuarioEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaUsuarioEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaUsuarioEmpresaCompleted(Me, New ConsultaUsuarioEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Consultas.asmx/ConsultaObrigacoes", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Consultas.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Consultas.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ConsultaObrigacoes(ByVal escritorioCNPJ As String, ByVal obrigacao As String) As String
            Dim results() As Object = Me.Invoke("ConsultaObrigacoes", New Object() {escritorioCNPJ, obrigacao})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub ConsultaObrigacoesAsync(ByVal escritorioCNPJ As String, ByVal obrigacao As String)
            Me.ConsultaObrigacoesAsync(escritorioCNPJ, obrigacao, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ConsultaObrigacoesAsync(ByVal escritorioCNPJ As String, ByVal obrigacao As String, ByVal userState As Object)
            If (Me.ConsultaObrigacoesOperationCompleted Is Nothing) Then
                Me.ConsultaObrigacoesOperationCompleted = AddressOf Me.OnConsultaObrigacoesOperationCompleted
            End If
            Me.InvokeAsync("ConsultaObrigacoes", New Object() {escritorioCNPJ, obrigacao}, Me.ConsultaObrigacoesOperationCompleted, userState)
        End Sub

        Private Sub OnConsultaObrigacoesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaObrigacoesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaObrigacoesCompleted(Me, New ConsultaObrigacoesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Consultas.asmx/ConsultaEmpresaUsuario" & _
            "Obrigacao", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Consultas.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Consultas.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ConsultaEmpresaUsuarioObrigacao(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal emailUsuarioEmpresa As String, ByVal obrigacao As String) As String
            Dim results() As Object = Me.Invoke("ConsultaEmpresaUsuarioObrigacao", New Object() {escritorioCNPJ, empresa, emailUsuarioEmpresa, obrigacao})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub ConsultaEmpresaUsuarioObrigacaoAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal emailUsuarioEmpresa As String, ByVal obrigacao As String)
            Me.ConsultaEmpresaUsuarioObrigacaoAsync(escritorioCNPJ, empresa, emailUsuarioEmpresa, obrigacao, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ConsultaEmpresaUsuarioObrigacaoAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal emailUsuarioEmpresa As String, ByVal obrigacao As String, ByVal userState As Object)
            If (Me.ConsultaEmpresaUsuarioObrigacaoOperationCompleted Is Nothing) Then
                Me.ConsultaEmpresaUsuarioObrigacaoOperationCompleted = AddressOf Me.OnConsultaEmpresaUsuarioObrigacaoOperationCompleted
            End If
            Me.InvokeAsync("ConsultaEmpresaUsuarioObrigacao", New Object() {escritorioCNPJ, empresa, emailUsuarioEmpresa, obrigacao}, Me.ConsultaEmpresaUsuarioObrigacaoOperationCompleted, userState)
        End Sub

        Private Sub OnConsultaEmpresaUsuarioObrigacaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaEmpresaUsuarioObrigacaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaEmpresaUsuarioObrigacaoCompleted(Me, New ConsultaEmpresaUsuarioObrigacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Consultas.asmx/ConsultaEscritorios", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Consultas.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Consultas.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ConsultaEscritorios(ByVal escritorioCNPJ As String) As String
            Dim results() As Object = Me.Invoke("ConsultaEscritorios", New Object() {escritorioCNPJ})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub ConsultaEscritoriosAsync(ByVal escritorioCNPJ As String)
            Me.ConsultaEscritoriosAsync(escritorioCNPJ, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ConsultaEscritoriosAsync(ByVal escritorioCNPJ As String, ByVal userState As Object)
            If (Me.ConsultaEscritoriosOperationCompleted Is Nothing) Then
                Me.ConsultaEscritoriosOperationCompleted = AddressOf Me.OnConsultaEscritoriosOperationCompleted
            End If
            Me.InvokeAsync("ConsultaEscritorios", New Object() {escritorioCNPJ}, Me.ConsultaEscritoriosOperationCompleted, userState)
        End Sub

        Private Sub OnConsultaEscritoriosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaEscritoriosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaEscritoriosCompleted(Me, New ConsultaEscritoriosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Consultas.asmx/ConsultaUsuarioEscrito" & _
            "rio", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Consultas.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Consultas.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ConsultaUsuarioEscritorio(ByVal escritorioCNPJ As String, ByVal login As String) As String
            Dim results() As Object = Me.Invoke("ConsultaUsuarioEscritorio", New Object() {escritorioCNPJ, login})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub ConsultaUsuarioEscritorioAsync(ByVal escritorioCNPJ As String, ByVal login As String)
            Me.ConsultaUsuarioEscritorioAsync(escritorioCNPJ, login, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ConsultaUsuarioEscritorioAsync(ByVal escritorioCNPJ As String, ByVal login As String, ByVal userState As Object)
            If (Me.ConsultaUsuarioEscritorioOperationCompleted Is Nothing) Then
                Me.ConsultaUsuarioEscritorioOperationCompleted = AddressOf Me.OnConsultaUsuarioEscritorioOperationCompleted
            End If
            Me.InvokeAsync("ConsultaUsuarioEscritorio", New Object() {escritorioCNPJ, login}, Me.ConsultaUsuarioEscritorioOperationCompleted, userState)
        End Sub

        Private Sub OnConsultaUsuarioEscritorioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaUsuarioEscritorioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaUsuarioEscritorioCompleted(Me, New ConsultaUsuarioEscritorioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub

        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing) _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024) _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub ConsultaEmpresasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaEmpresasCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ConsultaEmpresasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub ConsultaUsuarioEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaUsuarioEmpresaCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ConsultaUsuarioEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub ConsultaObrigacoesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaObrigacoesCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ConsultaObrigacoesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub ConsultaEmpresaUsuarioObrigacaoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaEmpresaUsuarioObrigacaoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ConsultaEmpresaUsuarioObrigacaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub ConsultaEscritoriosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaEscritoriosCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ConsultaEscritoriosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub ConsultaUsuarioEscritorioCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaUsuarioEscritorioCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ConsultaUsuarioEscritorioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class
End Namespace
