'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.34209
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

'
'Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.34209.
'
Namespace portal.incluir

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="CadastrosSoap", [Namespace]:="http://www.grupocandinho.com.br/WebServices/Cadastros.asmx")> _
    Partial Public Class Cadastros
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private CadastraEmpresaOperationCompleted As System.Threading.SendOrPostCallback

        Private CadastraObrigacaoOperationCompleted As System.Threading.SendOrPostCallback

        Private CadastraUsuarioEmpresaOperationCompleted As System.Threading.SendOrPostCallback

        Private CadastroEmpresaUsuarioObrigacaoOperationCompleted As System.Threading.SendOrPostCallback

        Private CadastraUsuarioEscritorioOperationCompleted As System.Threading.SendOrPostCallback

        Private CadastraEscritorioOperationCompleted As System.Threading.SendOrPostCallback

        Private useDefaultCredentialsSetExplicitly As Boolean

        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Administrativo.WS.My.MySettings.Default.Administrativo_WS_portal_incluir_Cadastros
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub

        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true) _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false)) _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property

        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property

        '''<remarks/>
        Public Event CadastraEmpresaCompleted As CadastraEmpresaCompletedEventHandler

        '''<remarks/>
        Public Event CadastraObrigacaoCompleted As CadastraObrigacaoCompletedEventHandler

        '''<remarks/>
        Public Event CadastraUsuarioEmpresaCompleted As CadastraUsuarioEmpresaCompletedEventHandler

        '''<remarks/>
        Public Event CadastroEmpresaUsuarioObrigacaoCompleted As CadastroEmpresaUsuarioObrigacaoCompletedEventHandler

        '''<remarks/>
        Public Event CadastraUsuarioEscritorioCompleted As CadastraUsuarioEscritorioCompletedEventHandler

        '''<remarks/>
        Public Event CadastraEscritorioCompleted As CadastraEscritorioCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Cadastros.asmx/CadastraEmpresa", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Cadastros.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Cadastros.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function CadastraEmpresa(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal razao As String, ByVal cnpj As String) As String
            Dim results() As Object = Me.Invoke("CadastraEmpresa", New Object() {escritorioCNPJ, empresa, razao, cnpj})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub CadastraEmpresaAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal razao As String, ByVal cnpj As String)
            Me.CadastraEmpresaAsync(escritorioCNPJ, empresa, razao, cnpj, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub CadastraEmpresaAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal razao As String, ByVal cnpj As String, ByVal userState As Object)
            If (Me.CadastraEmpresaOperationCompleted Is Nothing) Then
                Me.CadastraEmpresaOperationCompleted = AddressOf Me.OnCadastraEmpresaOperationCompleted
            End If
            Me.InvokeAsync("CadastraEmpresa", New Object() {escritorioCNPJ, empresa, razao, cnpj}, Me.CadastraEmpresaOperationCompleted, userState)
        End Sub

        Private Sub OnCadastraEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CadastraEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CadastraEmpresaCompleted(Me, New CadastraEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Cadastros.asmx/CadastraObrigacao", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Cadastros.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Cadastros.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function CadastraObrigacao(ByVal escritorioCNPJ As String, ByVal obrigacao As String, ByVal layout As String, ByVal nome As String) As String
            Dim results() As Object = Me.Invoke("CadastraObrigacao", New Object() {escritorioCNPJ, obrigacao, layout, nome})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub CadastraObrigacaoAsync(ByVal escritorioCNPJ As String, ByVal obrigacao As String, ByVal layout As String, ByVal nome As String)
            Me.CadastraObrigacaoAsync(escritorioCNPJ, obrigacao, layout, nome, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub CadastraObrigacaoAsync(ByVal escritorioCNPJ As String, ByVal obrigacao As String, ByVal layout As String, ByVal nome As String, ByVal userState As Object)
            If (Me.CadastraObrigacaoOperationCompleted Is Nothing) Then
                Me.CadastraObrigacaoOperationCompleted = AddressOf Me.OnCadastraObrigacaoOperationCompleted
            End If
            Me.InvokeAsync("CadastraObrigacao", New Object() {escritorioCNPJ, obrigacao, layout, nome}, Me.CadastraObrigacaoOperationCompleted, userState)
        End Sub

        Private Sub OnCadastraObrigacaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CadastraObrigacaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CadastraObrigacaoCompleted(Me, New CadastraObrigacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Cadastros.asmx/CadastraUsuarioEmpresa" & _
            "", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Cadastros.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Cadastros.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function CadastraUsuarioEmpresa(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal nome As String, ByVal email As String, ByVal ddd As String, ByVal telefone As String) As String
            Dim results() As Object = Me.Invoke("CadastraUsuarioEmpresa", New Object() {escritorioCNPJ, empresa, nome, email, ddd, telefone})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub CadastraUsuarioEmpresaAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal nome As String, ByVal email As String, ByVal ddd As String, ByVal telefone As String)
            Me.CadastraUsuarioEmpresaAsync(escritorioCNPJ, empresa, nome, email, ddd, telefone, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub CadastraUsuarioEmpresaAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal nome As String, ByVal email As String, ByVal ddd As String, ByVal telefone As String, ByVal userState As Object)
            If (Me.CadastraUsuarioEmpresaOperationCompleted Is Nothing) Then
                Me.CadastraUsuarioEmpresaOperationCompleted = AddressOf Me.OnCadastraUsuarioEmpresaOperationCompleted
            End If
            Me.InvokeAsync("CadastraUsuarioEmpresa", New Object() {escritorioCNPJ, empresa, nome, email, ddd, telefone}, Me.CadastraUsuarioEmpresaOperationCompleted, userState)
        End Sub

        Private Sub OnCadastraUsuarioEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CadastraUsuarioEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CadastraUsuarioEmpresaCompleted(Me, New CadastraUsuarioEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Cadastros.asmx/CadastroEmpresaUsuario" & _
            "Obrigacao", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Cadastros.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Cadastros.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function CadastroEmpresaUsuarioObrigacao(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal emailUsuarioEmpresa As String, ByVal obrigacao As String) As String
            Dim results() As Object = Me.Invoke("CadastroEmpresaUsuarioObrigacao", New Object() {escritorioCNPJ, empresa, emailUsuarioEmpresa, obrigacao})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub CadastroEmpresaUsuarioObrigacaoAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal emailUsuarioEmpresa As String, ByVal obrigacao As String)
            Me.CadastroEmpresaUsuarioObrigacaoAsync(escritorioCNPJ, empresa, emailUsuarioEmpresa, obrigacao, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub CadastroEmpresaUsuarioObrigacaoAsync(ByVal escritorioCNPJ As String, ByVal empresa As String, ByVal emailUsuarioEmpresa As String, ByVal obrigacao As String, ByVal userState As Object)
            If (Me.CadastroEmpresaUsuarioObrigacaoOperationCompleted Is Nothing) Then
                Me.CadastroEmpresaUsuarioObrigacaoOperationCompleted = AddressOf Me.OnCadastroEmpresaUsuarioObrigacaoOperationCompleted
            End If
            Me.InvokeAsync("CadastroEmpresaUsuarioObrigacao", New Object() {escritorioCNPJ, empresa, emailUsuarioEmpresa, obrigacao}, Me.CadastroEmpresaUsuarioObrigacaoOperationCompleted, userState)
        End Sub

        Private Sub OnCadastroEmpresaUsuarioObrigacaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CadastroEmpresaUsuarioObrigacaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CadastroEmpresaUsuarioObrigacaoCompleted(Me, New CadastroEmpresaUsuarioObrigacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Cadastros.asmx/CadastraUsuarioEscrito" & _
            "rio", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Cadastros.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Cadastros.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function CadastraUsuarioEscritorio(ByVal escritorioCNPJ As String, ByVal nome As String, ByVal login As String, ByVal senha As String, ByVal email As String) As String
            Dim results() As Object = Me.Invoke("CadastraUsuarioEscritorio", New Object() {escritorioCNPJ, nome, login, senha, email})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub CadastraUsuarioEscritorioAsync(ByVal escritorioCNPJ As String, ByVal nome As String, ByVal login As String, ByVal senha As String, ByVal email As String)
            Me.CadastraUsuarioEscritorioAsync(escritorioCNPJ, nome, login, senha, email, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub CadastraUsuarioEscritorioAsync(ByVal escritorioCNPJ As String, ByVal nome As String, ByVal login As String, ByVal senha As String, ByVal email As String, ByVal userState As Object)
            If (Me.CadastraUsuarioEscritorioOperationCompleted Is Nothing) Then
                Me.CadastraUsuarioEscritorioOperationCompleted = AddressOf Me.OnCadastraUsuarioEscritorioOperationCompleted
            End If
            Me.InvokeAsync("CadastraUsuarioEscritorio", New Object() {escritorioCNPJ, nome, login, senha, email}, Me.CadastraUsuarioEscritorioOperationCompleted, userState)
        End Sub

        Private Sub OnCadastraUsuarioEscritorioOperationCompleted(ByVal arg As Object)
            If (Not (Me.CadastraUsuarioEscritorioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CadastraUsuarioEscritorioCompleted(Me, New CadastraUsuarioEscritorioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.grupocandinho.com.br/WebServices/Cadastros.asmx/CadastraEscritorio", RequestNamespace:="http://www.grupocandinho.com.br/WebServices/Cadastros.asmx", ResponseNamespace:="http://www.grupocandinho.com.br/WebServices/Cadastros.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function CadastraEscritorio(ByVal cnpj As String, ByVal razao As String, ByVal ddd As String, ByVal telefone As String) As String
            Dim results() As Object = Me.Invoke("CadastraEscritorio", New Object() {cnpj, razao, ddd, telefone})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub CadastraEscritorioAsync(ByVal cnpj As String, ByVal razao As String, ByVal ddd As String, ByVal telefone As String)
            Me.CadastraEscritorioAsync(cnpj, razao, ddd, telefone, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub CadastraEscritorioAsync(ByVal cnpj As String, ByVal razao As String, ByVal ddd As String, ByVal telefone As String, ByVal userState As Object)
            If (Me.CadastraEscritorioOperationCompleted Is Nothing) Then
                Me.CadastraEscritorioOperationCompleted = AddressOf Me.OnCadastraEscritorioOperationCompleted
            End If
            Me.InvokeAsync("CadastraEscritorio", New Object() {cnpj, razao, ddd, telefone}, Me.CadastraEscritorioOperationCompleted, userState)
        End Sub

        Private Sub OnCadastraEscritorioOperationCompleted(ByVal arg As Object)
            If (Not (Me.CadastraEscritorioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CadastraEscritorioCompleted(Me, New CadastraEscritorioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub

        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing) _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024) _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub CadastraEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As CadastraEmpresaCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class CadastraEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub CadastraObrigacaoCompletedEventHandler(ByVal sender As Object, ByVal e As CadastraObrigacaoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class CadastraObrigacaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub CadastraUsuarioEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As CadastraUsuarioEmpresaCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class CadastraUsuarioEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub CadastroEmpresaUsuarioObrigacaoCompletedEventHandler(ByVal sender As Object, ByVal e As CadastroEmpresaUsuarioObrigacaoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class CadastroEmpresaUsuarioObrigacaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub CadastraUsuarioEscritorioCompletedEventHandler(ByVal sender As Object, ByVal e As CadastraUsuarioEscritorioCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class CadastraUsuarioEscritorioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")> _
    Public Delegate Sub CadastraEscritorioCompletedEventHandler(ByVal sender As Object, ByVal e As CadastraEscritorioCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class CadastraEscritorioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class
End Namespace
